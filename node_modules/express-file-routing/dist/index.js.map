{"version":3,"file":"index.js","sources":["../src/config.ts","../src/utils.ts","../src/lib.ts","../src/router.ts","../src/index.ts"],"sourcesContent":["const config = {\n  VALID_FILE_EXTENSIONS: [\".ts\", \".js\", \".mjs\"],\n  IGNORE_PREFIX_CHAR: \"_\",\n  DEFAULT_METHOD_EXPORTS: [\n    \"get\",\n    \"post\",\n    \"put\",\n    \"patch\",\n    \"delete\",\n    \"head\",\n    \"connect\",\n    \"options\",\n    \"trace\"\n  ]\n}\n\nexport default config\n","import type { ParsedPath } from \"path\"\n\nimport type { Route } from \"./types\"\n\nimport config from \"./config\"\n\n/**\n * @param parsedFile\n *\n * @returns Boolean Whether or not the file has to be excluded from route generation\n */\nexport const isFileIgnored = (parsedFile: ParsedPath) =>\n  !config.VALID_FILE_EXTENSIONS.includes(parsedFile.ext.toLowerCase()) ||\n  parsedFile.name.startsWith(config.IGNORE_PREFIX_CHAR) ||\n  parsedFile.dir.startsWith(`/${config.IGNORE_PREFIX_CHAR}`)\n\n/**\n * @param routes\n *\n * @returns An array of sorted routes based on their priority\n */\nexport const prioritizeRoutes = (routes: Route[]) =>\n  routes.sort((a, b) => a.priority - b.priority)\n\n/**\n * ```ts\n * mergePaths(\"/posts/[id]\", \"index.ts\") -> \"/posts/[id]/index.ts\"\n * ```\n *\n * @param paths An array of mergeable paths\n *\n * @returns A unification of all paths provided\n */\nexport const mergePaths = (...paths: string[]) =>\n  `/${paths.filter(path => path !== \"\").join(\"/\")}`\n\nconst regBackets = /\\[([^}]*)\\]/g\n\nconst transformBrackets = (value: string) =>\n  regBackets.test(value) ? value.replace(regBackets, (_, s) => `:${s}`) : value\n\n/**\n * @param path\n *\n * @returns A new path with all wrapping `[]` replaced by prefixed `:`\n */\nexport const convertParamSyntax = (path: string) => {\n  const subpaths: string[] = []\n\n  for (const subpath of path.split(\"/\")) {\n    subpaths.push(transformBrackets(subpath))\n  }\n\n  return mergePaths(...subpaths)\n}\n\n/**\n * The smaller the number the higher the priority with zero indicating highest priority\n *\n * @param url\n *\n * @returns An integer ranging from 0 to Infinity\n */\nexport const calculatePriority = (url: string) => {\n  const depth = url.match(/\\/.+?/g)?.length || 0\n  const specifity = url.match(/\\/:.+?/g)?.length || 0\n\n  return depth + specifity\n}\n\nexport const getHandlers = handler => {\n  if (!Array.isArray(handler)) return [handler]\n\n  return handler\n}\n\nexport const getMethodKey = (method: string) => {\n  let methodKey = method.toLowerCase()\n\n  if (methodKey === \"del\") return \"delete\"\n\n  return methodKey\n}\n","import { readdirSync, statSync } from \"fs\"\nimport path from \"path\"\n\nimport type { File, Route } from \"./types\"\n\nimport {\n  calculatePriority,\n  convertParamSyntax,\n  isFileIgnored,\n  mergePaths,\n  prioritizeRoutes\n} from \"./utils\"\n\n/**\n * @param directory The directory path to walk recursively\n * @param tree\n *\n * @returns An array of all nested files in the specified directory\n */\nexport const walkTree = (directory: string, tree: string[] = []) => {\n  const results: File[] = []\n\n  for (const fileName of readdirSync(directory)) {\n    const filePath = path.join(directory, fileName)\n    const fileStats = statSync(filePath)\n\n    if (fileStats.isDirectory()) {\n      results.push(...walkTree(filePath, [...tree, fileName]))\n    } else {\n      results.push({\n        name: fileName,\n        path: directory,\n        rel: mergePaths(...tree, fileName)\n      })\n    }\n  }\n\n  return results\n}\n\n/**\n * @param files\n *\n * @returns\n */\nexport const generateRoutes = (files: File[]) => {\n  const routes: Route[] = []\n\n  for (const file of files) {\n    const parsedFile = path.parse(file.rel)\n\n    if (isFileIgnored(parsedFile)) continue\n\n    const directory = parsedFile.dir === parsedFile.root ? \"\" : parsedFile.dir\n    const name = parsedFile.name.startsWith(\"index\")\n      ? parsedFile.name.replace(\"index\", \"\")\n      : `/${parsedFile.name}`\n\n    const url = convertParamSyntax(directory + name)\n    const priority = calculatePriority(url)\n    const exports = require(path.join(file.path, file.name))\n\n    routes.push({\n      url,\n      priority,\n      exports\n    })\n  }\n\n  return prioritizeRoutes(routes)\n}\n","import type { Express } from \"express\"\nimport path from \"path\"\n\nimport type { Options } from \"./types\"\n\nimport config from \"./config\"\n\nimport { generateRoutes, walkTree } from \"./lib\"\nimport { getHandlers, getMethodKey } from \"./utils\"\n\nconst REQUIRE_MAIN_FILE = path.dirname(require.main?.filename || process.cwd())\n\n/**\n * Attach routes to an Express app or router instance\n *\n * ```ts\n * createRouter(app)\n * ```\n *\n * @param app An express app or router instance\n * @param options An options object (optional)\n */\nconst createRouter = <T = Express>(app: T, options: Options = {}): T => {\n  const files = walkTree(\n    options.directory || path.join(REQUIRE_MAIN_FILE, \"routes\")\n  )\n\n  const routes = generateRoutes(files)\n\n  for (const { url, exports } of routes) {\n    const exportedMethods = Object.entries(exports)\n\n    for (const [method, handler] of exportedMethods) {\n      const methodKey = getMethodKey(method)\n      const handlers = getHandlers(handler)\n\n      if (\n        !options.additionalMethods?.includes(methodKey) &&\n        !config.DEFAULT_METHOD_EXPORTS.includes(methodKey)\n      )\n        continue\n\n      app[methodKey](url, ...handlers)\n    }\n\n    // wildcard default export route matching\n    if (typeof exports.default !== \"undefined\") {\n      ;(app as unknown as Express).all(url, ...getHandlers(exports.default))\n    }\n  }\n\n  return app\n}\n\nexport default createRouter\n","import { Router } from \"express\"\n\nimport type { Options } from \"./types\"\n\nimport createRouter from \"./router\"\n\nexport default createRouter\n\nexport { createRouter }\n\n/**\n * Routing middleware\n *\n * ```ts\n * app.use(\"/\", router())\n * ```\n *\n * @param options An options object (optional)\n */\nexport const router = (options: Options = {}) => {\n  return createRouter(Router(), options)\n}\n\nexport { Options }\n"],"names":["readdirSync","path","statSync","Router"],"mappings":"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"}